# -*- coding: utf-8 -*-
"""notebookd6fca8a3d9

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/#fileId=https%3A//storage.googleapis.com/kaggle-colab-exported-notebooks/mohammadtawsif/notebookd6fca8a3d9.670e98e3-8c3c-40bc-a918-44d9aa3ecfe4.ipynb%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com/20250406/auto/storage/goog4_request%26X-Goog-Date%3D20250406T150253Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D60847cb36f4fac2e7a3a31dd3cd8316e5c4d48353de948a0076e63206ed6f78a4c0648c29ce017f92446c19ea2135c25bfbf0e674d9694e571ce8d821811892963c3d23333d92bd090709b9d2c391c710c5bb1fa2364b25e541d0b081f3989cc41abd0af50e7cdb6394745df965fad86e4dd72fa68b27a7291d2290f20b008a1c8ac9a3832a3785fa8c8a163eee10d9209700a9cbf36e4759df7bb709f636534cd7aa41e0ad572e37d3b1305bcd7d27ad14e1a47803ec625261c1b0a90cd7c562900efe11cc728700d08bc027e449c46e3f63853c4410ab30cc4f74afc3253bba0f0997501ca4880ac4a4ecec929fae7fe549fbdfed182651e973304e7ec1723
"""

import os
import sys
from pathlib import Path
import logging
from flask import Flask, request, jsonify, render_template
import tensorflow as tf
import joblib
import numpy as np
import pandas as pd
from tensorflow.keras.preprocessing.image import load_img, img_to_array
from werkzeug.utils import secure_filename

# Configure logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = Flask(__name__)

# Configuration
BASE_DIR = Path(__file__).parent
MODEL_FILES = {
    'model': BASE_DIR / "model.h5",
    'preprocessor': BASE_DIR / "preprocessor.pkl",
    'scaler': BASE_DIR / "label_scaler.pkl"
}

# Verify files exist
missing_files = [str(path) for path in MODEL_FILES.values() if not path.exists()]
if missing_files:
    logger.error(f"Missing required files: {', '.join(missing_files)}")
    sys.exit(1)

logger.info("All model files found successfully!")

# Load models
try:
    # Handle TF version compatibility
    try:
        from tensorflow.keras.optimizers import AdamW
    except ImportError:
        from tensorflow.keras.optimizers.legacy import AdamW

    custom_objects = {
        'AdamW': AdamW,
        'CosineDecay': tf.keras.optimizers.schedules.CosineDecay
    }

    model = tf.keras.models.load_model(
        str(MODEL_FILES['model']),
        custom_objects=custom_objects,
        compile=False
    )
    model.compile(optimizer='adam', loss='mse', metrics=['mae'])

    preprocessor = joblib.load(str(MODEL_FILES['preprocessor']))
    label_scaler = joblib.load(str(MODEL_FILES['scaler']))

    logger.info("Models loaded successfully")
except Exception as e:
    logger.error(f"Error loading models: {str(e)}")
    raise

# ... [rest of your Flask routes and functions] ...

if __name__ == '__main__':
    port = int(os.environ.get('PORT', 5000))
    app.run(host='0.0.0.0', port=port)

